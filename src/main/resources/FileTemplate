import com.keyman.watcher.global.GlobalStore;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.GetMapping;
import com.keyman.watcher.util.GZIPUtil;
import com.keyman.watcher.util.JsonUtil;
import com.fasterxml.jackson.core.type.TypeReference;
import java.util.List;
import java.util.HashMap;
import java.util.Map;

 @RestController
 @RequestMapping("/file")
 public class {{className}} {
 {{methods}}


 private String handleResult(String key) {
         Map<String, Map<String, Object>> input = GlobalStore.getGlobalResult();
         Map<String, Object> valueMap = input.get(key);
         if (valueMap.size() <= 1) {
             Object oneValue = valueMap.values().iterator().next();
             String str;
             if (oneValue instanceof byte[]) {
                 str = GZIPUtil.decompress((byte[]) oneValue);
             } else {
                 str = oneValue.toString();
             }
             return str;
         }
         else {
             HashMap<String, Object> ipValue = new HashMap<>();
             for (Map.Entry<String, Object> entry : valueMap.entrySet()) {
                 String content = "";
                 String ip = entry.getKey();
                 Object val = entry.getValue();
                 if (val instanceof byte[]) {
                     content = GZIPUtil.decompress((byte[]) val);
                 } else {
                     content = val.toString();
                 }
                 Map<String, Object> result = JsonUtil.fromJsonToMap(content);
                 ipValue.put(ip, result);
             }
             return JsonUtil.writeToString(ipValue);
         }
     }
 }